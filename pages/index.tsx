import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { TransactionsResponse, Transaction, TransactionEntry } from '../lib/transactions'
import { computeRollingBudget } from '../lib/budget'

interface HomePageProps {
  transactions?: TransactionsResponse;
}

interface Display {
  transactionsByDate: Array<DisplayTransaction>
  weeklyBudget: number
}

interface DisplayTransaction {
  date: string;
  transactions: Array<Transaction>;
  sum: number
}

const sortTxnDatesDesc = (txnsByDate: Array<TransactionEntry>) => {
  return txnsByDate.sort((t1, t2) => {
    return (new Date(t2.date)) as any - (new Date(t1.date) as any)
  })
}

const generateDisplayData = (txnsByDate: Array<TransactionEntry>): Display => {
  return computeRollingBudget(txnsByDate)
}

const CurrencyAmount = (val: number) => (
  <div className={styles.currency}>

  </div>
)

const toCurrency = (val: number) => val.toLocaleString('en-US', {
  style: 'currency',
  currency: 'USD',
})

const Home: NextPage = (props: any) => {
  console.log(props)
  const sortedTransactions = sortTxnDatesDesc(props.transactions?.data || [])
  const display = generateDisplayData(sortedTransactions)
  return (
    <div className={styles.container}>
      <Head>
        <title>Ledger</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Ledger
        </h1>
        <div className={styles.centered}>
          <div className={styles.dateheader}>
            <p>Weekly budget remaining: {toCurrency(display.weeklyBudget)}</p>
          </div>
        </div>

        <div>
          {props && (!props.transactions || !props.transactions?.data) ? (
            <div>no data</div>
          ) : (
            display.transactionsByDate.map((t: DisplayTransaction, i: number) => (
              <div key={i} className={styles.transactionEntry}>
                <div className={styles.spaced} style={{ paddingBottom: '5px' }}>
                  <div className={styles.dateheader}>{t.date}</div>
                  <div className={styles.dateheader}>{toCurrency(t.sum)} ({toCurrency(t.dailyBudget)})</div>
                </div>
                <div>
                  {t.transactions.map((txn: Transaction, i: number) => (
                    <div key={i} className={styles.spaced}>
                      <div>{txn.vendor.slice(0, 25)}</div>
                      <div>{txn.amount}</div>
                    </div>
                  ))}
                </div>
              </div>
            ))
          )}
        </div>
      </main>
    </div >
  )
}

export async function getServerSideProps(context: any) {
  const response = await fetch('https://us-central1-realtime-spending.cloudfunctions.net/getTransactions')
  const transactions = await response.json()
  return {
    props: { transactions }
  }
}

export default Home
